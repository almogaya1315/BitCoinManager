@model UserViewModel


<h1>Logged-in: @Model.Email</h1>

<h4 style="margin-bottom: -15px; margin-top: 30px">Orders</h4>

<table class="table" style="margin-top: 30px">
    <thead>
        <tr>
            <th>
                Number
            </th>
            <th>
                Amount
            </th>
            <th>
                Price (per unit)
            </th>
            <th>
                Type
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Orders)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Model.Id, new { @id = "id-" + item.Model.Id, @Style = "border: 0, 0; border-width:0 0; readonly: true" })
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Amount, new { @id = "amount-" + item.Amount + "-" + item.Model.Id, @Style = "border: 0, 0; border-width:0 0; readonly: true" })
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price, new { @id = "price-" + item.Price + "-" + item.Model.Id, @style = "border: 0, 0; border-width:0 0; readonly: true" })
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Operation, new { @id = "operation-" + item.Operation + "-" + item.Model.Id, @style = "border: 0, 0; border-width:0 0; readonly: true" })
                </td>
            </tr>
        }

        @{ await Html.RenderPartialAsync("NewOrder", new OrderViewModel()); }

    </tbody>
</table>

